name: Test, Build and Deploy Staging
on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  RUN_REGION: europe-west2
  SERVICE_NAME: helper-express-microservice

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Latest Version
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'
      - name: Cache Node Modules
        id: test-npm
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-v15-${{ hashFiles('package-lock.json') }}
      - name: Install All Dependencies
        if: steps.test-npm.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Tests
        run: npm test
      - name: Run Linter
        run: npm run lint
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Latest Version
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'
      - name: Load Cached Node Modules
        id: test-npm
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-v15-${{ hashFiles('package-lock.json') }}
      - name: Cache Build
        id: build-dist
        uses: actions/cache@v2
        with:
          path: dist
          key: ${{ runner.os }}-v15-${{ hashFiles('dist/**/*') }}
      - name: Build Application
        run: npm run build
      - name: Minify Application
        run: npm run minify
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Latest Version
        uses: actions/checkout@v2
      - name: Load Cached Build
        id: build-dist-cache
        uses: actions/cache@v2
        with:
          path: dist
          key: ${{ runner.os }}-v15-${{ hashFiles('dist/**/*') }}

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}
      # Build and push image to Google Container Registry
      - name: Build
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"
      # Deploy image to Cloud Run
      - name: Deploy
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --quiet \
            --region "$RUN_REGION" \
            --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
            --platform "managed" \
            --allow-unauthenticated
